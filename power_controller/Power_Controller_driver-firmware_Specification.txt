Power controller driver-firmware specification

Output 0: PLATFORM_CONTROLLER
Output 1: PC1
Output 2: PC2
Output 3: DR1
Output 4: DR2
Output 5: LIFT_CONTROLLER

ADC's:
	// ADC1   
	cNTC       = 0
	NC1        = 1  // not used
	V24VContr  = 2
	IAUX       = 3
	IDR2       = 4
	IDR1       = 5
	IPC2       = 6
	IPC1       = 7

	// ADC2
	cIControl  = 8
	cIBAT2     = 9
	cIBAT1     = 10
	cV24VBus   = 11
	cVBAT1     = 12
	cVBAT2     = 13
	cV3V3      = 14
	cV5V       = 15

Device commands:
	- Get controlller ID 			: $100 -> int 									(controlller id)
	- Software version 				: $101 -> int, int 								(major version, minor version) 
	- Watchdog 						: $111, int	(wd_value) -> int, int, int, int 	(wd_value, wd_counter, received_wd, expected_wd)

Read commands:
	- Get output states				: $200 -> bool, bool, bool, bool, bool, bool 	(output 0, 1, 2, 3, 4, 5)
	- Get selected battery 			: $201 -> int							(selected battery 0,1,2)
	- Get switch voltage			: $202 -> int							(switch voltage)
	- Get warning voltage			: $203 -> int							(warning voltage)
	- Get cutoff voltage 			: $204 -> int 							(cutoff voltage)
	- Get safety input  			: $205 -> bool 							(safety input value)
	- Get extra input 				: $206 -> bool 							(extra input value)
	- Get ADC raw values			: $207 -> 16x int, int, int, int 		(actual, average, min, max)
	- Get ADC voltage values		: $208 -> 16x int, int, int, int 		(actual, average, min, max)
	- Get ADC engineering values	: $209 -> 16x int, int, int 			(average, min, max)
	- Get integrated current 		: $210 -> 16x int, int  				(integration time, integrated current mA)				// Maybe later?
	- Get battery voltage RAW 		: $211 -> int, int 						(bat1 mV, bat 2 mV)
	- Get battery voltage AVG 		: $212 -> int, int 						(bat1 mV, bat 2 mV)
	- Get battery voltage AVG 		: $212 -> int, int 						(bat1 mV, bat 2 mV)
	- Get battery switch sound   	: $213 -> bool 							(on/off)
	- Get alarm sound 				: $214 -> bool 							(on/off)
	- Get alarm sound interval   	: $215 -> int 							(interval [ms])
	- Get charging voltage  		: $216 -> int 							(charging voltage [mV])

Set commands:
	- Set auto switch voltage 		: $300, int 							-> int (set switch voltage)
	- Set warning voltage			: $301, int 							-> int (set warning voltage)
	- Set minimal voltage			: $302, int 							-> int (set cutoff voltage)
	- Set extra relay output 		: $303, bool 							-> bool (set value)
	- Set battery auto mode			: $304, bool (auto/man)					-> bool (selected mode) 
	- Set output state 				: $305, int, bool (ouput 1-5, on/off) 	-> int, bool (output, 0 -> error, on/off)		
	- Set battery switch sound	 	: $306, bool (on/off)					-> bool (on/off)
	- Set alarm sound			 	: $307, bool (on/off)					-> bool (on/off)
	- Set alarm sound interval		: $308, int 							-> int (interval [ms])
	- Set charging voltage 			: $309, int ([mV])						-> int (set charging voltage [mV]) // The value to check if a battery is charging

Other commands:
	- Enable 					: $400 									-> bool								// Mainly reset's watchdog
	- Shutdown 					: $401									-> bool (ok/not ok)
	- Serial debug mode 		: $402, bool (on/off)					-> bool (on/off)
	- Reset min/max vals		: $403, int (adc 0-15)					-> int (adc 0-15 reset)
	- Reset all min/max vals	: $404									-> bool (succes)
	- Select fullest battery	: $405 									-> int (selected battery 0,1,2)		// Selects highest voltage battery
	- Select battery force 		: $406, int	(battery index)				-> int (selected battery 0,1,2)		// Turn off auto switch mode and force switcht to selected battery
	- Is battery charging 		: $407, int	(battery index)				-> bool (charging or not)


Bij opstarten de PC aan die de controle neemt over de power controller, PC1.
